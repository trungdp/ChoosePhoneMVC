@model Models.EF.Category

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4 class="m-3 font-weight-bold text-primary">Tạo danh mục mới</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.ParentID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SeoTitle, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.SeoTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SeoTitle, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShowOnHome, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.CheckBoxFor(model => model.ShowOnHome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShowOnHome, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6 border-dark mx-4">
                <input type="submit" value="Thêm danh mục" class="btn btn-default border-dark border-10" />
                <div>
                    @Html.ActionLink("Quay lại", "Index")
                </div>
            </div>
        </div>
    </div>
}
